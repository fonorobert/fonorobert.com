name: ðŸš€ Deploy on push

# Will trigger the workflow on each push to the main branch
on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # The first job will build the hugo site and upload the artifact
  build:
    name: ðŸ”§ Build Hugo site
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.136.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          

      # - name: Install Dart Sass Embedded
      #   run: sudo snap install dart-sass-embedded

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      # - name: Install Node.js dependencies
      #   run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc         

      # We save the result as an artificat so we can use it in the next job
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: './public'

  # The second job will deploy the site to the FTP server using the artifact from the first job
  deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: release-artifact
        path: './public' # This is the path where the artifact will be downloaded to
    
    - name: ðŸ“‚ Upload files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ vars.ftp_server }}
        username: ${{ vars.ftp_username }}
        password: ${{ secrets.ftp_password }}
        local-dir: './public/'
        server-dir: './'
